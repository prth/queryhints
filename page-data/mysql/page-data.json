{"componentChunkName":"component---src-templates-db-template-js","path":"/mysql","result":{"data":{"cheatsheets":{"edges":[{"node":{"frontmatter":{"title":"Select","content":"SELECT * FROM table1;\nSELECT field1, field2 FROM table1;\nSELECT DISTINCT field1 FROM table1;\nSELECT * FROM table1 LIMIT 10;\nSELECT COUNT(*) FROM table1;\n"}}},{"node":{"frontmatter":{"title":"Filter","content":"SELECT * FROM table1 WHERE field1 IS NULL;\nSELECT * FROM table1 WHERE field1 >= 123 AND (field2 = false OR field3 != 'abc');\nSELECT * FROM table1 WHERE field1 IN (1,2,3);\nSELECT * FROM table1 WHERE field1 BETWEEN 100 and 200;\nSELECT * FROM table1 WHERE field1 LIKE '%abc%';\n"}}},{"node":{"frontmatter":{"title":"Count","content":"SELECT COUNT(*) FROM table1;\nSELECT COUNT(*) FROM table1 WHERE field1 IS NULL;\nSELECT COUNT(*) FROM table1 WHERE field1 LIKE '%abc%';\n"}}},{"node":{"frontmatter":{"title":"Aggregation","content":"SELECT field1, count(*) FROM table1 GROUP BY field1;\nSELECT field1, field2, AVG(field3) FROM table1 GROUP BY field1, field2;\nSELECT field1, SUM(field2) FROM table1 GROUP BY field1 HAVING field3 = 'abc';\n"}}},{"node":{"frontmatter":{"title":"Insert","content":"INSERT INTO table1 (field1, field2) VALUES ('value1', 'value2');\n"}}},{"node":{"frontmatter":{"title":"Update","content":"UPDATE table SET field1='new_value1' WHERE field2='value2';\n"}}},{"node":{"frontmatter":{"title":"Delete","content":"DELETE FROM table1 WHERE field1='value1';\n"}}}]},"queries":{"edges":[{"node":{"frontmatter":{"slug":"query-1","tags":["select","order"],"title":"Get directors of top 10 rated movies","mongodb":"db.movies.aggregate([\n  {\n    $sort: { rating: -1 }\n  },\n  {\n    $limit: 10\n  },\n  {\n    $group: {\n      _id: '$director'\n    }\n  }\n]);\n","mysql":"select distinct director \nfrom movies\norder by rating desc\nlimit 10\n","postgres":"select distinct director \nfrom movies\norder by rating desc\nlimit 10\n"}}},{"node":{"frontmatter":{"slug":"query-2","tags":["select","order","limit"],"title":"Get career report of directors with their movie count, average ratings, minimum rating, maximum rating\n","mongodb":"db.movies.aggregate([\n  {\n    $group: {\n      _id: '$director',\n      count: { $sum: 1 },\n      avg: { $avg: '$rating' },\n      min: { $min: '$rating' },\n      max: { $max: '$rating' },\n    }\n  }\n]);\n","mysql":"select director, count(*), avg(rating), min(rating), max(rating)\nfrom movies\ngroup by director;\n","postgres":"select director, count(*), avg(rating), min(rating), max(rating)\nfrom movies\ngroup by director;\n"}}},{"node":{"frontmatter":{"slug":"query-3","tags":["order","limit"],"title":"Get hourly count of movie reviews","mongodb":null,"mysql":"select DATE_FORMAT(review_created_at, '%Y-%m-%d %H:00:00') as hour, count(*)\nFROM movie_reviews\nGROUP BY hour\nORDER BY hour;\n","postgres":"select DATE_FORMAT(review_created_at, '%Y-%m-%d %H:00:00') as hour, count(*)\nFROM movie_reviews\nGROUP BY hour\nORDER BY hour;\n"}}},{"node":{"frontmatter":{"slug":"query-4","tags":["order","limit"],"title":"Get count of movies without any reviews in last 7 days","mongodb":null,"mysql":"SELECT *\nFROM \n  movies\nLEFT JOIN movie_reviews\nON movies.id = movie_reviews.movie_id\nAND movie_reviews.review_created_at >= DATE(NOW()) - INTERVAL 7 DAY\nWHERE movie_reviews.movie_id IS NULL;\n","postgres":"SELECT *\nFROM \n  movies\nLEFT JOIN movie_reviews\nON movies.id = movie_reviews.movie_id\nAND movie_reviews.review_created_at >= DATE(NOW()) - INTERVAL 7 DAY\nWHERE movie_reviews.movie_id IS NULL;\n"}}},{"node":{"frontmatter":{"slug":"query-5","tags":["order","limit"],"title":"Get top 5 rated movies in each genre","mongodb":null,"mysql":"select genre, movie_name, rating\n(SELECT \n  genre,\n  movie_name,\n  rating,\n  RANK() OVER (PARTITION BY genre ORDER BY rating DESC) as movie_rank\nFROM movies\n) \nwhere movie_rank <= 5\nORDER BY genre, rating DESC;\n","postgres":"select genre, movie_name, rating\n(SELECT \n  genre,\n  movie_name,\n  rating,\n  RANK() OVER (PARTITION BY genre ORDER BY rating DESC) as movie_rank\nFROM movies\n) \nwhere movie_rank <= 5\nORDER BY genre, rating DESC;\n"}}}]},"db":{"frontmatter":{"title":"MySQL","slug":"mysql","queryViewerLanguage":"sql"}}},"pageContext":{"slug":"mysql"}}}